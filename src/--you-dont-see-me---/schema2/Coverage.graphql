enum Status {
  pending_activation
  pending_payment
  pending_address
  purchase_initiated
  pending_acceptance
  pending_approval
  cancelled
  active
}

enum ApplicationStatus {
  pendingPhone
  pendingAddress
  pendingFamily
  pendingHistory
  pendingPackages
  pendingBenefits
  pendingStartDate
  pendingIdentity
  pendingPayment
  pendingConfirmation
  active
}

enum MaternityCare {
  none
  birthingCenter
  everywhere
}

type Coverage {
  id: ID!
  uuid: ID!
  account: Account
  accountId: ID
  members(where: JSONType): [Member]

  status: Status
  applicationStatus: ApplicationStatus

  familySize: Int
  state: String
  zipCode: String
  mailingAddress: Address

  rateQuoteId: String
  packageId: Int
  monthlyCost: Float
  sidecarPercentage: Float
  maxAnnualAllowance: Float
  fullCoverageThreshold: Float
  deductible: Float
  allowanceOverageCovered: Boolean
  prescriptionsCovered: Boolean
  threeYearRateLock: Boolean
  maternityCareCovered: MaternityCare

  discountAmount: Float
  startDate: Date
  endDate: Date
  paidUntilDate: Date

  selectedPaymentOption: Payment
  initialPaymentTypeBrand: String
  initialPaymentType: String
  initialPaymentTypeLast4: String
  initalPaymentGatewayId: String

  profit: Profit

  summaryFileKey: String
  summaryFileName: String

  createdAt: Date
  createdBy: ID
  updatedAt: Date
  updatedBy: ID
}

type Query {
  getCoverage(coverageUuid: String!): Coverage
}
